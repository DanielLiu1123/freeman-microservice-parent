<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>web</module>
        <module>common</module>
        <module>openfeign</module>
        <module>integration-test</module>
        <module>cache</module>
        <module>redis</module>
        <module>starter</module>
        <module>db</module>
        <module>loadbalancer</module>
        <module>gateway</module>
        <module>messaging</module>
        <module>circuitbreaker</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.6</version>
        <relativePath/> <!-- 始终从仓库获取 -->
    </parent>

    <groupId>cn.liumouren</groupId>
    <artifactId>freeman-microservice-parent</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <inceptionYear>2021</inceptionYear>
    <description>freeman微服务父pom</description>

    <scm>
        <url>https://github.com/DanielLiu1123/freeman-microservice-parent</url>
    </scm>

    <properties>
        <!-- 前三位为 spring boot 版本, 后面一位为扩展版本 -->
        <revision>2.4.6.1</revision>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- plugins -->
        <maven-jacoco.version>0.8.7</maven-jacoco.version>
        <maven-checkstyle.version>3.1.2</maven-checkstyle.version>
        <checkstyle.version>9.1</checkstyle.version>
        <flatten-maven.version>1.2.7</flatten-maven.version>
        <githook-maven.version>1.0.5</githook-maven.version>
        <spotbugs-maven.version>4.5.0.0</spotbugs-maven.version>
        <spotbugs.version>4.5.0</spotbugs.version>

        <!-- dependencies -->
        <spring-cloud.version>2020.0.4</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <fastjson.version>1.2.79</fastjson.version>
        <hutool.version>5.7.16</hutool.version>
        <guava.version>31.0.1-jre</guava.version>
        <druid-starter.version>1.2.8</druid-starter.version>
        <shardingsphere.version>5.0.0</shardingsphere.version>
        <!-- embedded server -->
        <testcontainers.version>2.0.19</testcontainers.version>

        <!-- 开关 -->
        <spotbugs.skip>true</spotbugs.skip>
        <githook.plugin.skip>true</githook.plugin.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <!-- TODO xxx-boot 包不应该放在这里? -->
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 统一工具类 hutool https://www.hutool.cn/ -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava-bom</artifactId>
                <version>${guava.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 统一 JSON 序列化工具 fastjson  -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- spotbugs -->
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
                <optional>true</optional>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-starter.version}</version>
            </dependency>

            <!-- shardingsphere -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <!-- 使用 XA 事务时，需要引入此模块 -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-transaction-xa-core</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <!-- 使用 BASE 事务时，需要引入此模块 -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-transaction-base-seata-at</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <!-- shardingsphere end -->

            <!-- Testing containers  -->
            <!-- see https://github.com/Playtika/testcontainers-spring-boot -->
            <dependency>
                <groupId>com.playtika.testcontainers</groupId>
                <artifactId>testcontainers-spring-boot-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- inner -->
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-common-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-web-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-openfeign-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-db-mongodb-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-db-mysql-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-server-side-loadbalancer-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-client-side-loadbalancer-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-gateway-lb-server-side-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-gateway-lb-client-side-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-circuitbreaker-boot</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-circuitbreaker-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- inner starter -->
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-web-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-openfeign-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-microservice-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-db-mongo-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-db-mysql-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-server-side-loadbalancer-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-client-side-loadbalancer-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-gateway-lb-server-side-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-gateway-lb-client-side-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-openfeign-lb-server-side-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>cn.liumouren</groupId>
                <artifactId>freeman-openfeign-lb-client-side-boot-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- inner end -->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 我们让 maven 生命周期插件跟着 spring boot 的版本走 -->
            <!-- clean -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <!-- compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} -Xmx1g -Dfile.encoding=UTF-8</argLine>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            <!-- install -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <!-- deploy -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>

            <!-- 单元测试覆盖率 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- source -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <configLocation>https://gitee.com/danielliu1123223/freeman-config/raw/master/checkstyle.xml</configLocation>
                </configuration>
            </plugin>
            <!-- spotbugs -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <effort>Max</effort>
                    <threshold>High</threshold>
                    <maxHeap>1024</maxHeap>
                    <outputEncoding>UTF-8</outputEncoding>
                    <xmlOutput>false</xmlOutput>
                    <spotbugsXmlOutput>false</spotbugsXmlOutput>
                    <outputDirectory>${project.build.directory}/spotbugs-reports</outputDirectory>
                    <omitVisitors>FindReturnRef,DumbMethods,DefaultEncodingDetector,SwitchFallthrough</omitVisitors>
                </configuration>
            </plugin>
            <!-- flatten -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven.version}</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
            </plugin>
            <!-- githook -->
            <plugin>
                <groupId>io.github.phillipuniverse</groupId>
                <artifactId>githook-maven-plugin</artifactId>
                <version>${githook-maven.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <skipRepositoryCheck>true</skipRepositoryCheck>
                            <hooks>
                                <pre-push>
                                    #!/bin/bash
                                    set -e
                                    function showGreen() {
                                        echo -e "\033[32m$1\033[0m"
                                    }
                                    function showBlue() {
                                        echo -e "\033[1;34m$1\033[0m"
                                    }
                                    showBlue '--------------------[begin]---------------------'
                                    showGreen "------------------------------------------------"
                                    showGreen '正在检查是否能通过编译...'
                                    showGreen "------------------------------------------------"
                                    mvn clean compile
                                    showGreen "------------------------------------------------"
                                    showGreen '正在检查代码格式...'
                                    showGreen "------------------------------------------------"
                                    mvn checkstyle:check
                                    # showGreen "------------------------------------------------"
                                    # showGreen '正在检查是否有明显bug...'
                                    # showGreen "------------------------------------------------"
                                    # mvn spotbugs:check
                                    showGreen "------------------------------------------------"
                                    showGreen '正在检查是否能通过单元测试...'
                                    showGreen "------------------------------------------------"
                                    mvn test -DskipTests=false
                                    showBlue '--------------------[ end ]---------------------'
                                </pre-push>
                            </hooks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>aliyun-releases</id>
            <name>aliyun maven</name>
            <url>https://packages.aliyun.com/maven/repository/2151940-release-L8VGZK/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
        	<id>spring.release</id>
        	<name>Spring GA Repository</name>
        	<url>https://repo.spring.io/release</url>
        	<snapshots>
        		<enabled>false</enabled>
        	</snapshots>
        </repository>
        <repository>
        	<id>spring.milestone</id>
        	<name>Spring Milestone Repository</name>
        	<url>https://repo.spring.io/milestone</url>
        	<snapshots>
        		<enabled>false</enabled>
        	</snapshots>
        </repository>
        <repository>
        	<id>spring.snapshot</id>
        	<name>Spring Snapshot Repository</name>
        	<url>https://repo.spring.io/snapshot</url>
        	<releases>
        		<enabled>false</enabled>
        	</releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-releases</id>
            <name>aliyun maven</name>
            <url>https://packages.aliyun.com/maven/repository/2151940-release-L8VGZK/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>aliyun-releases</id>
            <name>阿里云生产库</name>
            <url>https://packages.aliyun.com/maven/repository/2151940-release-L8VGZK/</url>
        </repository>
        <snapshotRepository>
            <id>aliyun-snapshot</id>
            <name>阿里云快照库</name>
            <url>https://packages.aliyun.com/maven/repository/2151940-snapshot-GcO0aN/</url>
        </snapshotRepository>
    </distributionManagement>

</project>